def supportVersion = "1.0.0"
def retrofitVersion = "2.6.1"
def okHttpVersion = "3.9.0"
def butterknifeVersion = "10.0.0"
def glideVersion = "4.9.0"
def junitVersion = "4.12"
def disklrucacheVersion = "2.0.2"
def rosaVersion = "1.1.2"
def room_version = "2.2.5"
def  archLifecycleVersion = '2.2.0'
ext {
    // build flag
    if (!project.hasProperty("snapshot")
            || Boolean.parseBoolean(project.property("snapshot"))) {
        snapshot = true
    } else {
        snapshot = false
    }

    // for firebase
    if (snapshot) {
        copy {
            from("${projectDir}/external/google") {
                include "google-services_debug.json"
            }
            into "${projectDir}/app"
            rename "google-services_debug.json", "google-services.json"
        }
    } else {
        copy {
            from("${projectDir}/external/google") {
                include "google-services_official.json"
            }
            into "${projectDir}/app"
            rename "google-services_official.json", "google-services.json"
        }
    }
    dependencies = [
            "junit"                      : "junit:junit:${junitVersion}",
            "androidx-junit"             : "androidx.test.ext:junit:1.1.1",
            "support-v4"                 : "androidx.legacy:legacy-support-v4:${supportVersion}",
            "appcompat-v7"               : "androidx.appcompat:appcompat:${supportVersion}",
            "runner"                     : "androidx.test:runner:1.1.0",
            "espresso-core"              : "androidx.test.espresso:espresso-core:3.1.0",
            "cardview"                   : "androidx.cardview:cardview:${supportVersion}",
            "constraint"                 : "androidx.constraintlayout:constraintlayout:1.1.3",
            "rxjava"                     : "io.reactivex.rxjava2:rxjava:2.2.11",
            "rxandroid"                  : "io.reactivex.rxjava2:rxandroid:2.1.1",
            "arouter-api"                : "com.alibaba:arouter-api:1.5.0",
            "arouter-compiler"           : "com.alibaba:arouter-compiler:1.2.2",

            "protobuf-java"              : "com.google.protobuf:protobuf-java:3.6.1",
            "protobuf-java-format"       : "com.googlecode.protobuf-java-format:protobuf-java-format:1.2",
            "channel-tcp"                : "com.ubtrobot.transport:channel-tcp:${rosaVersion}" + snapshotable(),
            "transport-rmp"              : "com.ubtrobot.transport:transport-rmp:${rosaVersion}" + snapshotable(),
            "marshal-protobuf"           : "com.ubtrobot.transport:marshal-protobuf:${rosaVersion}" + snapshotable(),
            "marshal-json"               : "com.ubtrobot.transport:marshal-json:${rosaVersion}" + snapshotable(),
            "marshal-parcelable"         : "com.ubtrobot.transport:marshal-parcelable:${rosaVersion}" + snapshotable(),
            "codec-parcelable-rmp"       : "com.ubtrobot.transport:codec-parcelable-rmp:${rosaVersion}" + snapshotable(),
            "codec-proto-rmp"            : "com.ubtrobot.transport:codec-proto-rmp:${rosaVersion}" + snapshotable(),
            "rosa-log"                   : "com.ubtrobot.ulog:logger-android:1.0.1",
            "protobuf"                   : "com.ubtech.jimupro:proto:0.0.1" + snapshotable(),
            "discovery-lan"              : "com.ubtrobot.transport:discovery-lan:${rosaVersion}" + snapshotable(),
            "discovery-ble"              : "com.ubtrobot.transport:discovery-ble:${rosaVersion}" + snapshotable(),
            "channel-ble"                : "com.ubtrobot.transport:channel-ble:${rosaVersion}" + snapshotable(),

            "recyclerview"               : "androidx.recyclerview:recyclerview:${supportVersion}",
            "converter"                  : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            "retrofit"                   : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            "rxadapter"                  : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            "eventbus"                   : "org.greenrobot:eventbus:3.1.1",

            "okHttp"                     : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            //others
            "okhttp3-logging-interceptor": "com.squareup.okhttp3:logging-interceptor:3.8.0",
            "butterknife"                : "com.jakewharton:butterknife:${butterknifeVersion}",
            "butterknife-compiler"       : "com.jakewharton:butterknife-compiler:${butterknifeVersion}",
            "glide"                      : "com.github.bumptech.glide:glide:${glideVersion}",
            "okhttp3-integration"        : "com.github.bumptech.glide:okhttp3-integration:${glideVersion}",
            "glide-compiler"             : "com.github.bumptech.glide:compiler:${glideVersion}",
            "disklrucache-android"       : "com.jakewharton:disklrucache:$disklrucacheVersion",
            "percent"                    : "androidx.percentlayout:percentlayout:${supportVersion}",

            "jimu-unity"                 : "com.ubtech.jimupro:unity:0.1.0" + snapshotable(),
            "jimu-blockly"               : "com.ubtech.jimupro:blockly:1.0.0" + snapshotable(),
            "apprtc"                     : "com.ubtrobot.media:apprtc:0.2.0-SNAPSHOT",
            "bugly"                      : "com.tencent.bugly:crashreport:2.8.6",
            "buglyNDK"                   : "com.tencent.bugly:nativecrashreport:3.6.0",

            "cameraview"                 : "com.otaliastudios:cameraview:2.6.0",
            "autosize"                   : "me.jessyan:autosize:1.1.2",

//            jetpack
            "room"                       :"androidx.room:room-runtime:$room_version",
            "room-rxjava"                : "androidx.room:room-rxjava2:$room_version",
            "lifecycle"                  : "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    ]


    unity = [
            obb_name: "JimuPro.main.obb"
    ]

    jenkins = [
            job_build_id    : "${System.env.BUILD_ID}",
            job_build_number: "${System.env.BUILD_NUMBER}"
    ]

    android = [
            compileSdkVersion        : 28,
            buildToolsVersion        : "28.0.3",
            applicationId            : "com.ubtech.jimupro",
            minSdkVersion            : 21,
            targetSdkVersion         : 28,

            versionCode              : formatCode(020),//versionName + buildnum(后四位)
            versionName              : formatVersion("0.2.0"),

            testInstrumentationRunner: "androidx.test.runner.AndroidJUnitRunner",
            buildNum                 : formatBuildNum(),
    ]

}

def snapshotable() {
    return ext.snapshot ? "-SNAPSHOT" : ""
}

def formatVersion(String version) {
    return version + "." + formatBuildNum()
}

def formatCode(int code) {
    return code * 10000 + formatBuildNum()
}

def formatBuildNum() {
    //def max_number = 9999
    def build_number = 0
    if (rootProject.ext.jenkins.job_build_number.isInteger()) {
        build_number = Integer.valueOf(rootProject.ext.jenkins.job_build_number)
    }
    return build_number % 10000
}

ext {
    mavRepoInternalUrl = System.getenv('LOCAL_MAVEN_URL')

    github_username = 'gotev'
    github_repository_name = 'android-upload-service'

    maintainer = 'Aleksandar Gotev'

    bintray_project_name = 'android-upload-service'
    library_description = 'Easily upload files in the background with automatic Android Notification Center progress indication.'
    library_keywords = ['android', 'upload', 'service', 'library', 'background', 'notification']
    library_licenses = ["Apache-2.0"]
    library_licenses_url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
    library_project_group = 'net.gotev'
    library_version = '4.0.0-beta01'
    version_code = 40
    min_sdk = 21
    target_sdk = 29
    demo_app_id = 'net.gotev.uploadservicedemo'

    // Gradle classpath dependencies versions
    kotlin_version = '1.3.50'
    gradle_version = '3.5.1'
    gradle_versions_plugin_version = '0.20.0'
    bintray_plugin_version = '1.8.4'
    kotlin_lint_version = '9.0.0'

    // Library and app testing dependencies versions
    junit_version = '4.12'
    androidx_test_core_version = '1.2.0'
    androidx_test_runner_version = '1.2.0'
    androidx_test_rules_version = '1.2.0'
    androidx_test_ext_junit_version = '1.1.1'
    androidx_test_ext_truth_version = '1.2.0'
    truth_version = '0.45'
    androidx_test_espresso_version = '3.2.0'

    // Library and app dependencies versions
    androidx_appcompat_version = '1.1.0'
    androidx_local_broadcast_version = '1.0.0'
}
